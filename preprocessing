# preprocessing/modified_hamilton_filter.py
import cv2
import numpy as np

def modified_hamilton_filter(image_path):
    # Load the image
    image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    
    # Apply Gaussian Blur for noise reduction (as an example)
    filtered_image = cv2.GaussianBlur(image, (5, 5), 0)
    
    # Example of edge preservation - apply adaptive thresholding
    preserved_edges = cv2.adaptiveThreshold(filtered_image, 255, cv2.ADAPTIVE_THRESH_MEAN_C, 
                                            cv2.THRESH_BINARY, 11, 2)
    return preserved_edges

if __name__ == "__main__":
    processed_image = modified_hamilton_filter("path_to_image.png")
    cv2.imwrite("data/processed_image.png", processed_image)
